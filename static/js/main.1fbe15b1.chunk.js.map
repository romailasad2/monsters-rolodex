{"version":3,"sources":["Componentts/card/card.component.jsx","Componentts/card-list/card-list.component.jsx","Componentts/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredState","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,YAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,mBAAmBC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC/B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJbC,EAAW,SAACR,GACrB,OAAM,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCHxCM,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAClB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4BDG,G,wDA9Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEAQO,IAAD,OAEjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,+BAGjC,IAAD,SAC4BE,KAAKR,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACZQ,EAAgBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC3CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAClD,OAEA,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAQW,YAAY,wBAAwBC,aAAc,SAAAiB,GAAM,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACrG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAzBRO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1fbe15b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.component.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n    <div className='card-container'>\r\n        <img alt='pic of a monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=320x320`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.component.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return<div className='card-list'>{\r\n    props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\r\n      }</div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const Search = ({ placeholder, handleChange}) => (\r\n    <input \r\n      className='search'\r\n      type='search' \r\n      placeholder={placeholder} \r\n      onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\nimport { CardList } from './Componentts/card-list/card-list.component';\nimport { Search } from './Componentts/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount(){\n    \n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => (response.json()))\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredState = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      \n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <Search placeholder=\"Ahh! You'r a MONSTER!\" handleChange={e => {this.setState({searchField: e.target.value})}}/>\n      <CardList monsters={filteredState} />\n    </div>\n  )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}